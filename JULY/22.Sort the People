/*
You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.

For each index i, names[i] and heights[i] denote the name and height of the ith person.

Return names sorted in descending order by the people's heights.

 

Example 1:

Input: names = ["Mary","John","Emma"], heights = [180,165,170]
Output: ["Mary","Emma","John"]
Explanation: Mary is the tallest, followed by Emma and John.
Example 2:

Input: names = ["Alice","Bob","Bob"], heights = [155,185,150]
Output: ["Bob","Alice","Bob"]
Explanation: The first Bob is the tallest, followed by Alice and the second Bob.
 

Constraints:

n == names.length == heights.length
1 <= n <= 103
1 <= names[i].length <= 20
1 <= heights[i] <= 1e5
names[i] consists of lower and upper case English letters.
All the values of heights are distinct.
*/

***********************************************SOLUTION*****************************************

class Solution {
public:
    vector<string> sortPeople(vector<string>& names, vector<int>& heights) {
        int temp;
        string s;
        int l=heights.size();
        for(int i=0;i<l;i++){
            for(int j=i+1;j<l;j++){
                if(heights[j]>heights[i]){
                    swap(heights[i],heights[j]);
                    swap(names[i],names[j]);
                }
            }
        }
        return names;
    }
};
