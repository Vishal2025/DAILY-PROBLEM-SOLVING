/*
Given a string array words, return an array of all characters that show up in all strings within the words (including duplicates).
You may return the answer in any order.

 

Example 1:

Input: words = ["bella","label","roller"]
Output: ["e","l","l"]
Example 2:

Input: words = ["cool","lock","cook"]
Output: ["c","o"]
 

Constraints:

1 <= words.length <= 100
1 <= words[i].length <= 100
words[i] consists of lowercase English letters. 
*/

***************************************************************SOLUTION***************************************************************

class Solution {
public:
    vector<string> commonChars(vector<string>& words) {
        vector<int>freqArr(26,0);

        for(int i=0;i<words[0].size();i++){
            freqArr[words[0][i]-'a']++;
        }

        vector<int>last=freqArr;

        for(int i=0;i<words.size();i++){

            vector<int> count(26,0);

            for(int j=0;j<words[i].size();j++){
                count[words[i][j]-'a']++;                
            }

            for(int j=0;j<26;j++){
                last[j]=min(last[j],count[j]);
            }

        }

        vector<string>result;

        for(int i=0;i<26;i++){

            while(last[i]>0){

                result.push_back(string(1,'a'+i));
                last[i]--;

            }
            
        }

        return result;
    }
};
